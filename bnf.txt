<program> ::= <program_heading> <block> <END_PROGRAM>

<program_heading> ::= <PROGRAM> <IDENTIFIER> <SEMI_COLON>

<block> ::= <constant_definition_part> <type_definition_part> <variable_definition_part> <procedure_and_function_declaration_part> <statement_part> | <constant_definition_part> <type_definition_part> <variable_definition_part> <statement_part> | <constant_definition_part> <type_definition_part> <procedure_and_function_declaration_part> <statement_part> | <constant_definition_part> <type_definition_part> <statement_part> | <constant_definition_part> <variable_definition_part> <procedure_and_function_declaration_part> <statement_part> | <constant_definition_part> <variable_definition_part> <statement_part> | <constant_definition_part> <procedure_and_function_declaration_part> <statement_part> | <constant_definition_part> <statement_part> | <type_definition_part> <variable_definition_part> <procedure_and_function_declaration_part> <statement_part> | <type_definition_part> <variable_definition_part> <statement_part> |  <type_definition_part> <procedure_and_function_declaration_part> <statement_part> |  <type_definition_part> <statement_part> | <variable_definition_part> <procedure_and_function_declaration_part> <statement_part> | <variable_definition_part> <statement_part> | <procedure_and_function_declaration_part> <statement_part> | <statement_part>

<constant_definition_part> ::= <CONST> <constant_definition> <constant_definition_rest>

<constant_definition_rest> ::= <SEMI_COLON> <constant_definition> <constant_definition_rest> | <SEMI_COLON>

<constant_definition> ::= <IDENTIFIER> <EQUAL> <constant>

<constant> ::= <NUMBER> | <sign> <NUMBER> | <IDENTIFIER> | <sign> <IDENTIFIER> | <CHAR>

<sign> ::= <ADD_OP> | <MINUS_OP>

<type_definition_part> ::= <TYPE> <type_definition> <type_definition_rest>

<type_definition_rest> ::= <SEMI_COLON> <type_definition> <type_definition_rest> <SEMI_COLON>

<type_definition> ::= <IDENTIFIER> <EQUAL> <type>

<type> ::= <simple_type> | <structured_type>

<simple_type> ::= <subrange_type> | <IDENTIFIER>

<subrange_type> ::= <constant> <SUBRANGE_SEPARATOR> <constant>

<structured_type> ::= <ARRAY> <OPEN_BRACKET> <simple_type> <CLOSE_BRACKET> <OF> <simple_type>

<variable_definition_part> ::= <VAR> <variable_declaration> <variable_declaration_rest>

<variable_declaration_rest> ::= <SEMI_COLON> <variable_declaration> <variable_declaration_rest> | <SEMI_COLON>

<variable_declaration> ::= <IDENTIFIER> <variable_declaration_rest>

<variable_declaration_rest> ::= <COMMA> <IDENTIFIER> <variable_declaration_rest> | <TYPE_DECLARATION> <type>

<procedure_and_function_declaration_part> ::= <procedure_or_function_declaration_part> <SEMI_COLON> <procedure_and_function_declaration_part>

<procedure_or_function_declaration_part> ::= <procedure_declaration> | <function_declaration>

<procedure_declaration> ::= <procedure_heading> <block>

<procedure_heading> ::= <PROCEDURE> <IDENTIFIER> <SEMI_COLON> | <PROCEDURE> <IDENTIFIER> <OPEN_PARENTHESIS> <formal_parameter_section> <formal_parameter_rest>

<formal_parameter_rest> ::= <SEMI_COLON> <formal_parameter_section> <formal_parameter_rest> | <CLOSE_PARENTHESIS> <SEMI_COLON>

<formal_parameter_section> ::= <parameter_group> | <VAR> <parameter_group>

<parameter_group> ::= <IDENTIFIER> <parameter_group_rest>

<parameter_group_rest> ::= <COMMA> <IDENTIFIER> <parameter_group_rest> | <TYPE_DECLARATION> <IDENTIFIER>

<function_declaration> ::= <function_heading> <block>

<function_heading> ::= <FUNCTION> <IDENTIFIER> <TYPE_DECLARATION> <IDENTIFIER> <SEMI_COLON> | <IDENTIFIER> <OPEN_PARENTHESIS> <formal_parameter_section> <formal_parameter_function_rest>

<formal_parameter_function_rest> ::= <SEMI_COLON> <formal_parameter_section> <formal_parameter_function_rest> | <CLOSE_PARENTHESIS> <TYPE_DECLARATION> <IDENTIFIER> <SEMI_COLON>

<statement_part> ::= <BEGIN> <statement> <statement_rest> | <BEGIN> <statement_rest>

<statement_rest> ::= <SEMI_COLON> <statement> <statement_rest> | <SEMI_COLON> <statement_rest> | <END>

<statement> ::= <simple_statement> | <structured_statement>

<simple_statement> ::= <assignment_statement> | <procedure_statement> 

<assignment_statement> ::= <variable> <ASSIGNMENT> <expression> | <IDENTIFIER> <ASSIGNMENT> <expression>

<variable> ::= <IDENTIFIER> | <component_variable>

<component_variable> ::= <IDENTIFIER> <OPEN_BRACKET> <expression> <CLOSE_BRACKET>

<expression> ::= <simple_expression> | <simple_expression> <relational_operator> <simple_expression>

<simple_expression> ::= <term> | <simple_expression> <adding_operator> <term> | <sign> <term>

<term> ::= <factor> | <term> <multiplying_operator> <factor>

<factor> ::= <variable> | <unsigned_constant> | <function_designator> | (<expression>) | <NOT_LOGOP> <factor> | <CHAR>

<unsigned_constant> ::= <NUMBER> | <IDENTIFIER>

<function_designator> ::= <IDENTIFIER> | <IDENTIFIER> <OPEN_PARENTHESIS> <actual_parameter> <actual_parameter_rest>

<actual_parameter_rest> ::= <COMMA> <actual_parameter> <actual_parameter_rest> | <CLOSE_PARENTHESIS>

<actual_parameter> ::= <expression> | <variable>

<multiplying_operator> ::= <MULTIPLY_OP> | <DIV_OP> | <AND_LOGOP>

<adding_operator> ::= <ADD_OP> | <MINUS_OP> | <OR_LOGOP>

<relational_operator> ::= <LESS_OP> | <LESS_EQUAL_OP> | <GREATER_OP> | <GREATER_EQUAL_OP> | <EQUAL>

<procedure_statement> ::= <IDENTIFIER> | <IDENTIFIER> <OPEN_PARENTHESIS> <actual_parameter> <actual_parameter_rest>

<structured_statement> ::= <statement_part> | <conditional_statement> | <repetitive_statement>

<conditional_statement> ::= <IF> <expression> <THEN> <statement> | <IF> <expression> <THEN> | <IF> <expression> <THEN> <statement> <ELSE> <statement> | <IF> <expression> <THEN> <statement> <ELSE>  | <IF> <expression> <THEN> <ELSE> <statement> | <IF> <expression> <THEN> <ELSE> 

<repetitive_statement> ::= <WHILE> <expression> <DO> <statement> |  <WHILE> <expression> <DO>